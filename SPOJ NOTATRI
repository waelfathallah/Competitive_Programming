// #binary-search
#include <bits/stdc++.h>
#include <sstream>
using namespace std;
#define _ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
typedef long long ll;
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define MP make_pair
int dx[8]={2,-2,2,-2,1,-1,1,-1};
int dy[8]={1,1,-1,-1,2,2,-2,-2};
const int oo = 1e9;
vector<int> v;
int n;
int up(int n) {
	return lower_bound(v.begin(), v.end(), n) - v.begin() ;
}
 
int solve(vector<int> v,int n){
    int ans=0;
    for(int i=0;i<n-2;i++){
        for(int j=i+1;j<n-1;j++){
                int idx=up(v[i]+v[j]+1);
                ans+=(idx<n ? n-idx : 0);
        }
    }
    return  ans;
}
int main() {_
int a;
 while(cin >> n && n!=0){
    v.clear();
    for(int i=0;i<n;i++){
        cin >> a;
        v.push_back(a);
    }
    sort(v.begin(),v.end());
    cout << solve(v,n) << endl ;
 }
}
